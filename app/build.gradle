apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: '../buildsystem/quality/quality.gradle'
apply from: '../buildsystem/quality/ktlint.gradle'


android {
    compileSdkVersion rootProject.ext.androidVersions.compileSdkVersion
    testOptions.unitTests.includeAndroidResources = true

    defaultConfig {
        applicationId "com.feelsokman.coroutineplayground"
        minSdkVersion rootProject.ext.androidVersions.minSdkVersion
        targetSdkVersion rootProject.ext.androidVersions.targetSdkVersion
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {

        }

    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".release"
            versionNameSuffix "-release"


        }
        debug {
            minifyEnabled false
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }

    flavorDimensions "style", "monetize"
    productFlavors {
        templateStyle {
            dimension "style"
            applicationIdSuffix ".templateStyle"
            versionNameSuffix "-templateStyle"
            resValue "string", "app_name", "Coroutine Playground"
            versionCode 1
            versionName "0.1"
        }

        free {
            dimension "monetize"
            applicationIdSuffix ".free"
            versionNameSuffix "-free"
        }

        premium {
            dimension "monetize"
            applicationIdSuffix ".premium"
            versionNameSuffix "-premium"
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/ASL2.0'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Basic Google components
    implementation rootProject.ext.dependencies.appCompatX
    implementation rootProject.ext.dependencies.material
    implementation rootProject.ext.dependencies.cardViewX
    implementation rootProject.ext.dependencies.constraintLayoutX
    implementation rootProject.ext.dependencies.recyclerviewX
    implementation rootProject.ext.dependencies.annotation
    implementation rootProject.ext.dependencies.fragmentKtx

    // Lifecycle
    implementation rootProject.ext.dependencies.lifecycle
    implementation rootProject.ext.dependencies.viewmodelKtx

    // General Ktx
    implementation rootProject.ext.dependencies.coreKtx
    implementation rootProject.ext.dependencies.collectionsKtx

    // CoRoutines
    implementation rootProject.ext.dependencies.coroutinesCore
    implementation rootProject.ext.dependencies.coroutinesAndroid

    //Navigation
    implementation rootProject.ext.dependencies.navigationFragments
    implementation rootProject.ext.dependencies.navigationUI

    // Dependency Injection
    implementation rootProject.ext.dependencies.dagger
    kapt rootProject.ext.dependencies.daggerCompiler
    implementation rootProject.ext.dependencies.daggerAndroid
    implementation rootProject.ext.dependencies.daggerAndroidSupport
    kapt rootProject.ext.dependencies.daggerProcessor

    // Logging
    implementation rootProject.ext.dependencies.timberLogger

    // UI stuff
    implementation rootProject.ext.dependencies.toast
    implementation rootProject.ext.dependencies.lovelydialog
    implementation rootProject.ext.dependencies.flashbar
    implementation rootProject.ext.dependencies.materialEditText
    implementation rootProject.ext.dependencies.shimmer

    // Gif
    implementation rootProject.ext.dependencies.gif

    // Animations
    implementation rootProject.ext.dependencies.animations1
    implementation rootProject.ext.dependencies.animations2
    implementation rootProject.ext.dependencies.animations3

    // Otto
    implementation rootProject.ext.dependencies.otto

    // Leak detection
    debugImplementation rootProject.ext.dependencies.leakCanary

    // Firebase
    implementation rootProject.ext.dependencies.firebaseAnalytics
    // Crashlytics
    implementation rootProject.ext.dependencies.crashlytics

    // testing (avoid androidTestImplementation if you can!)
    testImplementation 'androidx.test.ext:junit:1.1.2-alpha03'
    testImplementation 'org.mockito:mockito-core:3.0.0'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    testImplementation 'org.mockito:mockito-inline:3.0.0'
    testImplementation 'org.amshove.kluent:kluent:1.51'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'

    androidTestImplementation rootProject.ext.testDependencies.jUnit
    androidTestImplementation rootProject.ext.testDependencies.jUnitKotlin
    androidTestImplementation rootProject.ext.testDependencies.testCoreX
    androidTestImplementation rootProject.ext.testDependencies.runner
    androidTestImplementation rootProject.ext.testDependencies.espresso


    debugImplementation rootProject.ext.testDependencies.fragmentScenario

}
